services:
  web:
    build:
      context: ..
      target: runner
      args:
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:
        NEXT_PUBLIC_CLERK_FRONTEND_API_URL:
        NEXT_PUBLIC_CLERK_SIGN_IN_FORCE_REDIRECT_URL:
        NEXT_PUBLIC_CLERK_SIGN_UP_FORCE_REDIRECT_URL:
        NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL:
        NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL:
        NEXT_PUBLIC_CONVEX_URL:
    image: leo-web:latest
    restart: always
    env_file:
      - ../shared/config/.env.production
    environment:
      - PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      qdrant:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant:v1.8.1
    restart: always
    volumes:
      - ../shared/data/qdrant:/qdrant/storage
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/127.0.0.1/6333'"]
      interval: 30s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.54.1
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../shared/prometheus:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:3.2.0
    restart: always
    command:
      - -config.file=/etc/loki/config.yml
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - ../shared/loki:/loki
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:3.2.0
    restart: always
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./loki/promtail-config.yml:/etc/promtail/config.yml:ro
    command:
      - -config.file=/etc/promtail/config.yml
    depends_on:
      loki:
        condition: service_started

  grafana:
    image: grafana/grafana:11.1.0
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ../shared/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "4300:3000"
    depends_on:
      prometheus:
        condition: service_started
      loki:
        condition: service_started

  backup:
    image: alpine:3.20
    restart: unless-stopped
    entrypoint: ["/bin/sh", "/backups/scripts/cron.sh"]
    environment:
      - BACKUP_CRON_SCHEDULE=${BACKUP_CRON_SCHEDULE:-0 3 * * *}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7}
      - BACKUP_TARGET=${BACKUP_TARGET:-/backups/archive}
    volumes:
      - ../shared/data:/data:ro
      - ../shared/backups:/backups
      - ./backups:/backups/scripts:ro
    depends_on:
      qdrant:
        condition: service_started

networks:
  default:
    name: leo
